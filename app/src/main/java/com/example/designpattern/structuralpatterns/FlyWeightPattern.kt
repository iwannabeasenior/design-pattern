package com.example.designpattern.structuralpatterns

/*
    @Date: 18/02/2025
    @Written by: Nguyen Trung Thanh
*/

/*
Flyweight Pattern trong Kotlin
Flyweight Pattern l√† m·ªôt m·∫´u thi·∫øt k·∫ø thu·ªôc nh√≥m C·∫•u tr√∫c (Structural Pattern).
M·ª•c ƒë√≠ch c·ªßa Flyweight Pattern l√† gi·∫£m thi·ªÉu vi·ªác t·∫°o ra c√°c ƒë·ªëi t∆∞·ª£ng gi·ªëng nhau v√† t·ªëi ∆∞u b·ªô nh·ªõ b·∫±ng c√°ch s·ª≠ d·ª•ng c√°c ƒë·ªëi t∆∞·ª£ng chia s·∫ª.
M·∫´u thi·∫øt k·∫ø n√†y r·∫•t h·ªØu √≠ch khi c√≥ r·∫•t nhi·ªÅu ƒë·ªëi t∆∞·ª£ng nh·ªè, kh√¥ng thay ƒë·ªïi v√† c√≥ th·ªÉ chung nhau m·ªôt s·ªë tr·∫°ng th√°i.

üìå Khi n√†o s·ª≠ d·ª•ng Flyweight Pattern?

    Khi b·∫°n c√≥ m·ªôt s·ªë l∆∞·ª£ng l·ªõn c√°c ƒë·ªëi t∆∞·ª£ng c√≥ tr·∫°ng th√°i gi·ªëng nhau, v√≠ d·ª• nh∆∞ bi·ªÉu t∆∞·ª£ng UI, k√Ω t·ª± vƒÉn b·∫£n, pixel, h√¨nh v·∫Ω.
    Khi b·∫°n mu·ªën ti·∫øt ki·ªám b·ªô nh·ªõ b·∫±ng c√°ch chia s·∫ª c√°c ƒë·ªëi t∆∞·ª£ng chung.
*/

// Example

interface FlyWeightShape {
    fun draw()
}

class FlyWeightCircleShape(private val color: String) : FlyWeightShape {
    override fun draw() {
        println("Drawing a $color circle")
    }
}

class ShapeFactory {
    private val circleMap = mutableMapOf<String, FlyWeightCircleShape>()
    fun getCircle(color: String): FlyWeightCircleShape {
        if (!circleMap.containsKey(color)) {
            println("Creating a new $color circle")
            circleMap[color] = FlyWeightCircleShape(color)
        }
        return circleMap[color]!!
    }
}
fun main() {
    val shapeFactory = ShapeFactory()

}